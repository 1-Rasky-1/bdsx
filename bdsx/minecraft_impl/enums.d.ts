declare module "../minecraft" {
    enum AbilitiesIndex {
        Build,
        Mine,
        DoorsAndSwitches,
        OpenContainers,
        AttackPlayers,
        AttackMobs,
        OperatorCommands,
        Teleport,
        /** Both are 8 */
        ExposedAbilityCount,
        Invulnerable=8,
        Flying,
        MayFly,
        Instabuild,
        Lightning,
        FlySpeed,
        WalkSpeed,
        Muted,
        WorldBuilder,
        NoClip,
        AbilityCount,
    }
    namespace Ability {
        enum Options {
            None,
            NoSave,
            CommandExposed=2,
            PermissionsInterfaceExposed=4,
            WorldbuilderOverrides=8,
            NoSaveCommandExposed=3,
            NoSavePermissionsInterfaceExposed=5,
            CommandExposedPermissionsInterfaceExposed=6,
            NoSaveCommandExposedPermissionsInterfaceExposed=7,
            NoSaveWorldbuilderOverrides=9,
            CommandExposedWorldbuilderOverrides=10,
            NoSaveCommandExposedWorldbuilderOverrides=11,
            PermissionsInterfaceExposedWorldbuilderOverrides=12,
            NoSavePermissionsInterfaceExposedWorldbuilderOverrides=13,
            CommandExposedPermissionsInterfaceExposedWorldbuilderOverrides=14,
            All=15,
        }
    }
    namespace Ability {
        enum Type {
            Invalid,
            Unset,
            Bool,
            Float,
        }
    }
    enum ActorDamageCause {
        /** The kill command */
        Override,
        /** @deprecated */
        None=0,
        Contact,
        EntityAttack,
        Projectile,
        Suffocation,
        /** @deprecated Typo */
        Suffoocation=4,
        Fall,
        Fire,
        FireTick,
        Lava,
        Drowning,
        BlockExplosion,
        EntityExplosion,
        Void,
        Suicide,
        Magic,
        Wither,
        Starve,
        Anvil,
        Thorns,
        FallingBlock,
        Piston,
        FlyIntoWall,
        Magma,
        Fireworks,
        Lightning,
        Charging,
        Temperature=0x1A,
        All=0x1F,
    }
    enum ActorFlags {
        OnFire,
        Sneaking,
        Riding,
        Sprinting,
        UsingItem,
        Invisible,
        Tempted,
        InLove,
        Saddled,
        Powered,
        Ignit0ed,
        Baby,
        Converting,
        Critical,
        CanShowName,
        AlwaysShowName,
        NoAI,
        Silent,
        WallClimbing,
        CanClimb,
        CanSwim,
        CanFly,
        CanWalk,
        Resting,
        Sitting,
        Angry,
        Interested,
        Charged,
        Tamed,
        Orphaned,
        Leashed,
        Sheared,
        Gliding,
        Elder,
        Moving,
        Breathing,
        Chested,
        Stackable,
        ShowBottom,
        Standing,
        Shaking,
        Idling,
        Casting,
        Charging,
        WasdControlled,
        CanPowerJump,
        Lingering,
        HasCollision,
        HasGravity,
        FireImmune,
        Dancing,
        Enchanted,
        ReturnTrident,
        ContainerIsPrivate,
        IsTransforming,
        DamageNearbyMobs,
        Swimming,
        Bribed,
        IsPregnant,
        LayingEgg,
        RiderCanPick,
        TransitionSitting,
        Eating,
        LayingDown,
        Snezing,
        Trusting,
        Rolling,
        Scared,
        InScaffolding,
        OverScaffolding,
        FallThroughScaffolding,
        Blocking,
        TransitionBlocking,
        BlockedUsingShield,
        BlockedUsingDamagedShield,
        Sleeping,
        WantsToWake,
        TradeInterest,
        DoorBreaker,
        BreakingObstruction,
        DoorOpener,
        IsIllagerCaptain,
        Stunned,
        Roaring,
        DelayedAttack,
        IsAvoidingMobs,
        FacingTargetToRangeAttack,
        HiddenWhenInvisible,
        IsInUI,
        Stalking,
        Emoting,
        Celebrating,
    }
    enum ActorType {
        Item=0x40,
        PrimedTnt,
        FallingBlock,
        MovingBlock,
        Experience,
        EyeOfEnder,
        EnderCrystal,
        FireworksRocket,
        FishingHook=0x4D,
        Chalkboard,
        Painting=0x53,
        LeashKnot=0x58,
        BoatRideable=0x5A,
        LightningBolt=0x5D,
        AreaEffectCloud,
        Balloon=0x6B,
        Shield=0x75,
        Lectern=0x77,
        TypeMask=0xFF,
        Mob,
        Npc=0x133,
        Agent=0x138,
        ArmorStand=0x13D,
        TripodCamera,
        Player,
        Bee=0x17A,
        Piglin,
        PiglinBrute=0x17F,
        PathfinderMob=0x300,
        IronGolem=0x314,
        SnowGolem,
        WanderingTrader=0x376,
        Monster=0xB00,
        Creeper=0xB21,
        Slime=0xB25,
        EnderMan,
        Ghast=0xB29,
        LavaSlime=0xB2A,
        Blaze,
        Witch=0xB2D,
        Guardian=0xB31,
        ElderGuardian,
        Dragon=0xB35,
        Shulker,
        Vindicator=0xB39,
        IllagerBeast=0xB3B,
        EvocationIllager=0xB68,
        Vex,
        Pillager=0xB72,
        ElderGuardianGhost=0xB78,
        Animal=0x1300,
        Chicken=0x130A,
        Cow,
        Pig,
        Sheep,
        MushroomCow=0x1310,
        Rabbit=0x1312,
        PolarBear=0x131C,
        Llama,
        Turtle=0x134A,
        Panda=0x1371,
        Fox=0x1379,
        Hoglin=0x137C,
        Strider,
        Goat=0x1380,
        Axolotl=0x1382,
        WaterAnimal=0x2300,
        Squid=0x2311,
        Dolphin=0x231F,
        Pufferfish=0x236C,
        Salmon,
        Tropicalfish=0x236F,
        Fish,
        GlowSquid=0x2381,
        TameableAnimal=0x5300,
        Wolf=0x530E,
        Ocelot=0x5316,
        Parrot=0x531E,
        Cat=0x534B,
        Ambient=0x8100,
        Bat=0x8113,
        UndeadMob=0x10B00,
        PigZombie=0x10B24,
        WitherBoss=0x10B34,
        Phantom=0x10B3A,
        Zoglin=0x10B7E,
        ZombieMonster=0x30B00,
        Zombie=0x30B20,
        ZombieVillager=0x30B2C,
        Husk=0x30B2F,
        Drowned=0x30B6E,
        ZombieVillagerV2=0x30B74,
        Arthropod=0x40B00,
        Spider=0x40B23,
        Silverfish=0x40B27,
        CaveSpider,
        Endermite=0x40B37,
        Minecart=0x80000,
        MinecartRideable=0x80054,
        MinecartHopper=0x80060,
        MinecartTNT,
        MinecartChest,
        MinecartFurnace,
        MinecartCommandBlock,
        SkeletonMonster=0x110B00,
        Skeleton=0x110B22,
        Stray=0x110B2E,
        WitherSkeleton=0x110B30,
        EquineAnimal=0x205300,
        Horse=0x205317,
        Donkey,
        Mule,
        SkeletonHorse=0x215B1A,
        ZombieHorse,
        Projectile=0x400000,
        ExperiencePotion=0x400044,
        ShulkerBullet=0x40004C,
        DragonFireball=0x40004F,
        Snowball=0x400051,
        ThrownEgg,
        LargeFireball=0x400055,
        ThrownPotion,
        Enderpearl,
        WitherSkull=0x400059,
        WitherSkullDangerous=0x40005B,
        SmallFireball=0x40005E,
        LingeringPotion=0x400065,
        LlamaSpit,
        EvocationFang,
        IceBomb=0x40006A,
        AbstractArrow=0x800000,
        Trident=0x0C00049,
        Arrow,
        VillagerBase=0x1000300,
        Villager=0x100030F,
        VillagerV2=0x1000373,
    }
    namespace BossEventPacket {
        enum Colors {
            Pink,
            Blue,
            Red,
            Green,
            Yellow,
            Purple,
            White,
        }
    }
    namespace BossEventPacket {
        enum Overlay {
            Progress,
            Notched6,
            Notched10,
            Notched12,
            Notched20,
        }
    }
    namespace CompletedUsingItemPacket {
        enum Actions {
            EquipArmor,
            Eat,
            Attack,
            Consume,
            Throw,
            Shoot,
            Place,
            FillBottle,
            FillBucket,
            PourBucket,
            UseTool,
            Interact,
            Retrieved,
            Dyed,
            Traded,
        }
    }
    namespace Enchant {
        enum Type {
            ArmorAll,
            ArmorFire,
            ArmorFall,
            ArmorExplosive,
            ArmorProjectile,
            ArmorThorns,
            WaterBreath,
            WaterSpeed,
            WaterAffinity,
            WeaponDamage,
            WeaponUndead,
            WeaponArthropod,
            WeaponKnockback,
            WeaponFire,
            WeaponLoot,
            MiningEfficiency,
            MiningSilkTouch,
            MiningDurability,
            MiningLoot,
            BowDamage,
            BowKnockback,
            BowFire,
            BowInfinity,
            FishingLoot,
            FishingLure,
            FrostWalker,
            Mending,
            CurseBinding,
            CurseVanishing,
            TridentImpaling,
            TridentRiptide,
            TridentLoyalty,
            TridentChanneling,
            CrossbowMultishot,
            CrossbowPiercing,
            CrossbowQuickCharge,
            SoulSpeed,
            NumEnchantments,
            InvalidEnchantment,
        }
    }
    namespace Facing {
        enum Name {
            Down,
            Up,
            North,
            South,
            West,
            East,
            Max,
        }
    }
    namespace Json {
        enum ValueType {
            Null=0,
            Int32=1,
            Int64=2,
            Float64=3,
            String=4,
            Boolean=5,
            Array=6,
            Object=7,
        }
    }
    namespace NpcDialoguePacket {
        enum Actions {
            Open,
            Close,
        }
    }
    enum PackType {
        Invalid,
        Addon,
        Cached,
        CopyProtected,
        Behavior,
        PersonaPiece,
        Resources,
        Skins,
        WorldTemplate,
        Count,
    }
    namespace PlayerActionPacket {
        enum Actions {
            /** @deprecated */
            StartBreak,
            /** @deprecated */
            AbortBreak,
            /** @deprecated */
            StopBreak,
            GetUpdatedBlock,
            /** @deprecated */
            DropItem,
            StartSleeping,
            StopSleeping,
            Respawn,
            /** @deprecated */
            Jump,
            /** @deprecated */
            StartSprint,
            /** @deprecated */
            StopSprint,
            /** @deprecated */
            StartSneak,
            /** @deprecated */
            StopSneak,
            CreativePlayerDestroyBlock,
            DimensionChangeAck,
            /** @deprecated */
            StartGlide,
            /** @deprecated */
            StopGlide,
            /** @deprecated */
            BuildDenied,
            CrackBreak,
            /** @deprecated */
            ChangeSkin,
            /** @deprecated */
            SetEnchantmentSeed,
            /** @deprecated */
            StartSwimming,
            /** @deprecated */
            StopSwimming,
            StartSpinAttack,
            StopSpinAttack,
            InteractBlock,
            PredictDestroyBlock,
            ContinueDestroyBlock,
        }
    }
    namespace PositionTrackingDBClientRequestPacket {
        enum Actions {
            Query,
        }
    }
    namespace PositionTrackingDBServerBroadcastPacket {
        enum Actions {
            Update,
            Destroy,
            NotFound,
        }
    }
    enum ResourcePackResponse {
        Cancel=1,
        Downloading,
        DownloadingFinished,
        ResourcePackStackFinished,
    }
    namespace ScorePacketInfo {
        enum Type {
            PLAYER=1,
            ENTITY=2,
            FAKE_PLAYER=3,
        }
    }
}
export {};
